{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\coronoapi\\\\components\\\\countrySelector.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useStats from '../utils/useStats';\nexport default function CountryStats() {\n  var countries = useStats('https://covid19.mathdro.id/api/countries');\n  if (!countries) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, \" Loading....!\");\n  console.log(countries);\n  return __jsx(React.Fragment, null, __jsx(\"select\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, Object.entries(countries.countries).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        country = _ref2[0],\n        code = _ref2[1];\n\n    return __jsx(\"option\", {\n      key: code,\n      value: code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, country);\n  })));\n}","map":{"version":3,"sources":["D:/coronoapi/components/countrySelector.js"],"names":["useStats","CountryStats","countries","console","log","Object","entries","map","country","code"],"mappings":";;;;AAAA,OAAOA,QAAP,MAAqB,mBAArB;AAEA,eAAe,SAASC,YAAT,GAAwB;AACrC,MAAMC,SAAS,GAAGF,QAAQ,CAAC,0CAAD,CAA1B;AACA,MAAI,CAACE,SAAL,EAAgB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,MAAM,CAACC,OAAP,CAAeJ,SAAS,CAACA,SAAzB,EAAoCK,GAApC,CAAwC;AAAA;AAAA,QAAEC,OAAF;AAAA,QAAWC,IAAX;;AAAA,WACvC;AAAQ,MAAA,GAAG,EAAEA,IAAb;AAAmB,MAAA,KAAK,EAAEA,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,OADH,CADuC;AAAA,GAAxC,CADH,CADF,CADF;AAWD","sourcesContent":["import useStats from '../utils/useStats';\r\n\r\nexport default function CountryStats() {\r\n  const countries = useStats('https://covid19.mathdro.id/api/countries');\r\n  if (!countries) return <p> Loading....!</p>;\r\n  console.log(countries);\r\n  return (\r\n    <>\r\n      <select>\r\n        {Object.entries(countries.countries).map(([country, code]) => (\r\n          <option key={code} value={code}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}